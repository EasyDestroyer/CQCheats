
local CQCheats = Instance.new("ScreenGui")
local ContainerFrame = Instance.new("Frame")
local ContainerFrameUIListLayout = Instance.new("UIListLayout")
local NotificationContainer = Instance.new("Frame")
local NotificationContainerUIListLayout = Instance.new("UIListLayout")
local UIAspectRatioConstraintOpen = Instance.new("UIAspectRatioConstraint")
local UIStroke = Instance.new("UIStroke")
local UICorner = Instance.new("UICorner")
local Open = Instance.new("ImageButton")
local Blur = Instance.new("BlurEffect")

local DefaultLayoutOrder = 0

task.spawn(function()
	CQCheats.Name = math.random(100000, 99999999)
	CQCheats.Parent = LocalPlayer:WaitForChild("PlayerGui")
	CQCheats.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	CQCheats.ResetOnSpawn = false

	ContainerFrame.Name = "ContainerFrame"
	ContainerFrame.Parent = CQCheats
	ContainerFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	ContainerFrame.BackgroundTransparency = 1.000
	ContainerFrame.BorderColor3 = Color3.new(0, 0, 0)
	ContainerFrame.BorderSizePixel = 0
	ContainerFrame.Position = UDim2.new(0, 0, 0, 0)
	ContainerFrame.Size = UDim2.new(1, 0, 1, 0)
	ContainerFrame.Visible = false

	ContainerFrameUIListLayout.Parent = ContainerFrame
	ContainerFrameUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	ContainerFrameUIListLayout.Padding = UDim.new(0, 50)
	ContainerFrameUIListLayout.FillDirection = Enum.FillDirection.Horizontal
	ContainerFrameUIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center

	NotificationContainer.Name = "NotificationContainer"
	NotificationContainer.Parent = CQCheats
	NotificationContainer.BackgroundColor3 = Color3.new(1, 1, 1)
	NotificationContainer.BackgroundTransparency = 1.000
	NotificationContainer.BorderColor3 = Color3.new(0, 0, 0)
	NotificationContainer.BorderSizePixel = 0
	NotificationContainer.Position = UDim2.new(0.8, 0, 0, 0)
	NotificationContainer.Size = UDim2.new(0.2, 0, 0.980487823, 0)

	NotificationContainerUIListLayout.Parent = NotificationContainer
	NotificationContainerUIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	NotificationContainerUIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	NotificationContainerUIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
	NotificationContainerUIListLayout.Padding = UDim.new(0, 10)

	UIStroke.Parent = Open
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Thickness = 2
	UIStroke.Color = Color3.new(1, 0.666667, 0)

	Open.Name = "Open"
	Open.Parent = CQCheats
	Open.BackgroundColor3 = Color3.new(1, 1, 1)
	Open.BorderColor3 = Color3.new(0, 0, 0)
	Open.BorderSizePixel = 0
	Open.Position = UDim2.new(0.963, 0, 0.352, 0)
	Open.Size = UDim2.new(0.0330, 0, 0.0838, 0)
	Open.Image = "rbxassetid://16296032484"

	UICorner.CornerRadius = UDim.new(0, 6)
	UICorner.Parent = Open

	UIAspectRatioConstraintOpen.Parent = Open
	UIAspectRatioConstraintOpen.AspectRatio = 1

	Blur.Parent = LightingService
	Blur.Enabled = false
	Blur.Size = 16

	task.spawn(function()
		Open.Activated:Connect(function()
			ContainerFrame.Visible = not ContainerFrame.Visible
			Blur.Enabled = not Blur.Enabled
		end)
	end)
end)

local function CreateTab(Name)
	local Tab = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local CornerFix = Instance.new("Frame")
	local ModulesContainer = Instance.new("Frame")	
	local UIListLayout = Instance.new("UIListLayout")	
	local Title = Instance.new("TextLabel")
	local UIGradient = Instance.new("UIGradient")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

	Tab.Name = "Tab"
	Tab.Parent = ContainerFrame
	Tab.BackgroundColor3 = Color3.new(0, 0, 0)
	Tab.BorderColor3 = Color3.new(0, 0, 0)
	Tab.BorderSizePixel = 0
	Tab.Position = UDim2.new(0.434, 0, 0, 0)
	Tab.Size = UDim2.new(0.142, 0, 0.0490, 0)

	UICorner.CornerRadius = UDim.new(0, 7)
	UICorner.Parent = Tab

	CornerFix.Name = "CornerFix"
	CornerFix.Parent = Tab
	CornerFix.BackgroundColor3 = Color3.new(0, 0, 0)
	CornerFix.BorderColor3 = Color3.new(0, 0, 0)
	CornerFix.BorderSizePixel = 0
	CornerFix.Position = UDim2.new(0, 0, 0.371, 0)
	CornerFix.Size = UDim2.new(1, 0, 0.629, 0)

	ModulesContainer.Name = "ModulesContainer"
	ModulesContainer.Parent = Tab
	ModulesContainer.BackgroundColor3 = Color3.new(1, 1, 1)
	ModulesContainer.BackgroundTransparency = 1.000
	ModulesContainer.BorderColor3 = Color3.new(0, 0, 0)
	ModulesContainer.BorderSizePixel = 0
	ModulesContainer.Position = UDim2.new(0, 0, 1, 0)
	ModulesContainer.Size = UDim2.new(1, 0, 21.429, 0)

	UIListLayout.Parent = ModulesContainer
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.FillDirection = Enum.FillDirection.Vertical
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder	

	Title.Name = "Title"
	Title.Parent = Tab
	Title.BackgroundColor3 = Color3.new(1, 1, 1)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.new(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0, 0, 0.124, 0)
	Title.Size = UDim2.new(1, 0, 0.743, 0)
	Title.Font = Enum.Font.GothamBold
	Title.Text = Name
	Title.TextColor3 = Color3.new(0, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 20
	Title.TextWrapped = true

	UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}
	UIGradient.Rotation = 90
	UIGradient.Parent = Title

	UITextSizeConstraint.Parent = Title
	UITextSizeConstraint.MaxTextSize = 20

	return ModulesContainer
end

local function CreateToggle(Parent, Name, DefaultValue, CallBack)
	local Toggle = Instance.new("TextButton")
	local UIGradient = Instance.new("UIGradient")
	local UIPadding = Instance.new("UIPadding")	
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local DropDownButton = Instance.new("ImageButton")

	local CallBackValue = DefaultValue

	local LayoutOrder = 0

	local function CallBackToggle(Value)		
		task.spawn(function()
			if Value == true then
				CallBackValue = true
				UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 1)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}

				CallBack(true)
			end
		end)

		task.spawn(function()
			if Value == false then
				CallBackValue = false
				UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 1, 1)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 1, 1))}

				CallBack(false)
			end
		end)
	end

	Toggle.Name = "Toggle"
	Toggle.Parent = Parent
	Toggle.BackgroundColor3 = Color3.new(0, 0, 0)
	Toggle.BackgroundTransparency = 0.150
	Toggle.BorderColor3 = Color3.new(0, 0, 0)
	Toggle.BorderSizePixel = 0
	Toggle.Position = UDim2.new(2.873, 0, 0, 0)
	Toggle.Size = UDim2.new(1, 0, 0.041, 0)
	Toggle.AutoButtonColor = false
	Toggle.Font = Enum.Font.GothamBold
	Toggle.Text = Name
	Toggle.TextColor3 = Color3.new(1, 1, 1)
	Toggle.TextScaled = true
	Toggle.TextSize = 14
	Toggle.TextWrapped = true
	Toggle.TextXAlignment = Enum.TextXAlignment.Left
	Toggle.LayoutOrder = DefaultLayoutOrder + 10

	LayoutOrder = Toggle.LayoutOrder
	DefaultLayoutOrder = LayoutOrder

	UIGradient.Rotation = 90
	UIGradient.Parent = Toggle

	UIPadding.Parent = Toggle
	UIPadding.PaddingLeft = UDim.new(0, 15)

	UITextSizeConstraint.Parent = Toggle
	UITextSizeConstraint.MaxTextSize = 14

	DropDownButton.Name = "DropDownButton"
	DropDownButton.Parent = Toggle
	DropDownButton.BackgroundColor3 = Color3.new(1, 1, 1)
	DropDownButton.BackgroundTransparency = 1.000
	DropDownButton.BorderColor3 = Color3.new(0, 0, 0)
	DropDownButton.BorderSizePixel = 0
	DropDownButton.Position = UDim2.new(0.822, 0, 0.176, 0)
	DropDownButton.Rotation = 90.000
	DropDownButton.Size = UDim2.new(0.115, 0, 0.618, 0)
	DropDownButton.Image = "http://www.roblox.com/asset/?id=12809025337"	

	task.spawn(function()
		CallBackToggle(CallBackValue)
	end)

	task.spawn(function()
		Toggle.Activated:Connect(function()
			CallBackToggle(not CallBackValue)
		end)
	end)

	return Toggle, DropDownButton, LayoutOrder, UIGradient
end

local function CreateKeyBind(Parent, DefaultValue, LayoutOrder, CallBack)
	local KeyBind = Instance.new("TextButton")
	local UIGradient = Instance.new("UIGradient")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

	local function CallBackToggle(Value)
		CallBack(Value)
	end

	KeyBind.Name = "KeyBind"
	KeyBind.Parent = Parent
	KeyBind.BackgroundColor3 = Color3.new(0, 0, 0)
	KeyBind.BackgroundTransparency = 0.150
	KeyBind.BorderColor3 = Color3.new(0, 0, 0)
	KeyBind.BorderSizePixel = 0
	KeyBind.Position = UDim2.new(0, 0, 0.0765, 0)
	KeyBind.Size = UDim2.new(1, 0, 0.025, 0)
	KeyBind.AutoButtonColor = false
	KeyBind.Font = Enum.Font.GothamBold
	KeyBind.Text = "KeyBind: " .. DefaultValue
	KeyBind.TextColor3 = Color3.new(1, 50, 255)
	KeyBind.TextScaled = true
	KeyBind.TextSize = 11
	KeyBind.LayoutOrder = LayoutOrder

	UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}
	UIGradient.Rotation = 90
	UIGradient.Parent = KeyBind

	UITextSizeConstraint.Parent = KeyBind
	UITextSizeConstraint.MaxTextSize = 11

	task.spawn(function()
		local InputValue = false
		local Value = false

		KeyBind.Activated:Connect(function()
			if Value == false then
				InputValue = true	
				KeyBind.Text = "..."
			end

			if Value == true and InputValue == true then
				KeyBind.Text = "KeyBind: " .. "..."
				InputValue = false
				CallBackToggle("...")
			end

			Value = not Value
		end)

		task.spawn(function()
			UserInputService.InputBegan:Connect(function(Input)
				if InputValue == true and not UserInputService:GetFocusedTextBox() then
					if Input.KeyCode and Input.UserInputType == Enum.UserInputType.Keyboard then
						KeyBind.Text = "KeyBind: " .. Input.KeyCode.Name

						CallBackToggle(Input.KeyCode.Name)
						InputValue = false
					end
				end
			end)
		end)
	end)

	return KeyBind
end

local function CreateMiniToggle(Parent, Name, DefaultValue, LayoutOrder, CallBack)
	local MiniToggle = Instance.new("TextButton")
	local UIGradient = Instance.new("UIGradient")

	local CallBackValue = DefaultValue

	local function CallBackToggle(Value)		
		task.spawn(function()
			if Value == true then
				CallBackValue = true
				UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}

				CallBack(true)
			end
		end)

		task.spawn(function()
			if Value == false then
				CallBackValue = false
				UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 1, 1)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 1, 1))}

				CallBack(false)
			end
		end)
	end

	MiniToggle.Name = "MiniToggle"
	MiniToggle.Parent = Parent
	MiniToggle.BackgroundColor3 = Color3.new(0, 0, 0)
	MiniToggle.BackgroundTransparency = 0.150
	MiniToggle.BorderColor3 = Color3.new(0, 0, 0)
	MiniToggle.BorderSizePixel = 0
	MiniToggle.Position = UDim2.new(0, 0, 0.0765, 0)
	MiniToggle.Size = UDim2.new(1, 0, 0.0354, 0)
	MiniToggle.AutoButtonColor = false
	MiniToggle.Font = Enum.Font.GothamBold
	MiniToggle.Text = Name
	MiniToggle.TextColor3 = Color3.new(1, 50, 250)
	MiniToggle.TextSize = 11
	MiniToggle.LayoutOrder = LayoutOrder

	UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}
	UIGradient.Rotation = 90
	UIGradient.Parent = MiniToggle

	task.spawn(function()
		CallBackToggle(CallBackValue)		
	end)

	task.spawn(function()
		MiniToggle.Activated:Connect(function()
			CallBackToggle(not CallBackValue)
		end)
	end)

	return MiniToggle
end

local function CreateSlider(Parent, Name, DefaultValue, MaximumValue, LayoutOrder, CallBack)
	local Slider = Instance.new("Frame")
	local SliderFrame = Instance.new("Frame")
	local Fill = Instance.new("Frame")
	local UIGradient = Instance.new("UIGradient")
	local Bar = Instance.new("TextButton")
	local UICorner = Instance.new("UICorner")	
	local UIStroke = Instance.new("UIStroke")
	local NameDisplay = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local ValueDisplay = Instance.new("TextLabel")
	local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")

	Slider.Name = "Slider"
	Slider.Parent = Parent
	Slider.BackgroundColor3 = Color3.new(0, 0, 0)
	Slider.BackgroundTransparency = 0.150
	Slider.BorderColor3 = Color3.new(0, 0, 0)
	Slider.BorderSizePixel = 0
	Slider.Position = UDim2.new(0, 0, 0.123, 0)
	Slider.Size = UDim2.new(1, 0, 0.058, 0)
	Slider.LayoutOrder = LayoutOrder

	SliderFrame.Name = "SliderFrame"
	SliderFrame.Parent = Slider
	SliderFrame.BackgroundColor3 = Color3.new(1, 1, 1)
	SliderFrame.BackgroundTransparency = 1.000
	SliderFrame.BorderColor3 = Color3.new(0, 0, 0)
	SliderFrame.BorderSizePixel = 0
	SliderFrame.Position = UDim2.new(0.150, 0, 0.582, 0)
	SliderFrame.Size = UDim2.new(0.700, 0, 0.0600, 0)

	Fill.Name = "Fill"
	Fill.Parent = SliderFrame
	Fill.BackgroundColor3 = Color3.new(1, 1, 1)
	Fill.BorderColor3 = Color3.new(0, 0, 0)
	Fill.BorderSizePixel = 0
	Fill.Position = UDim2.new(-0.00672, 0, -0.329, 0)
	Fill.Size = UDim2.new(1.000, 0, 1, 0)

	UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}
	UIGradient.Rotation = 90
	UIGradient.Parent = Fill

	Bar.Name = "Bar"
	Bar.Parent = SliderFrame
	Bar.BackgroundColor3 = Color3.new(1, 0.666667, 0)
	Bar.BorderColor3 = Color3.new(0, 0, 0)
	Bar.BorderSizePixel = 0
	Bar.Position = UDim2.new(0.199, 0, -1.768, 0)
	Bar.Size = UDim2.new(0.0650, 0, 3.725, 0)
	Bar.ZIndex = 2
	Bar.AutoButtonColor = false
	Bar.Font = Enum.Font.GothamBold
	Bar.Text = ""
	Bar.TextColor3 = Color3.new(1, 1, 1)
	Bar.TextSize = 14.000

	UICorner.CornerRadius = UDim.new(1, 0)
	UICorner.Parent = Bar

	UIStroke.Parent = Bar
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Thickness = 1
	UIStroke.Color = Color3.new(0, 0, 0)

	NameDisplay.Name = "NameDisplay"
	NameDisplay.Parent = Slider
	NameDisplay.BackgroundColor3 = Color3.new(1, 1, 1)
	NameDisplay.BackgroundTransparency = 1.000
	NameDisplay.BorderColor3 = Color3.new(0, 0, 0)
	NameDisplay.BorderSizePixel = 0
	NameDisplay.Position = UDim2.new(0.145, 0, -0.118, 0)
	NameDisplay.Size = UDim2.new(0, 50, 0, 30)
	NameDisplay.Font = Enum.Font.GothamBold
	NameDisplay.Text = Name
	NameDisplay.TextColor3 = Color3.new(1, 0.666667, 0)
	NameDisplay.TextScaled = true
	NameDisplay.TextSize = 10

	UITextSizeConstraint.Parent = NameDisplay
	UITextSizeConstraint.MaxTextSize = 10

	ValueDisplay.Name = "ValueDisplay"
	ValueDisplay.Parent = Slider
	ValueDisplay.BackgroundColor3 = Color3.new(1, 1, 1)
	ValueDisplay.BackgroundTransparency = 1.000
	ValueDisplay.BorderColor3 = Color3.new(0, 0, 0)
	ValueDisplay.BorderSizePixel = 0
	ValueDisplay.Position = UDim2.new(0.635, 0, -0.118, 0)
	ValueDisplay.Size = UDim2.new(0, 50, 0, 30)
	ValueDisplay.Font = Enum.Font.GothamBold
	ValueDisplay.Text = DefaultValue
	ValueDisplay.TextColor3 = Color3.new(1, 0.666667, 0)
	ValueDisplay.TextScaled = true
	ValueDisplay.TextSize = 10

	UITextSizeConstraint_2.Parent = ValueDisplay
	UITextSizeConstraint_2.MaxTextSize = 10

	local Debounce = true

	local function Snap(Number, Factor)
		if Factor == 0 then
			return Number
		end

		if Factor ~= 0 then
			return math.floor(Number / Factor + 0.5) * Factor
		end
	end

	task.spawn(function()
		Bar.MouseButton1Down:Connect(function()
			Debounce = false
		end)

		UserInputService.InputEnded:connect(function(Input)
			if Input.UserInputType == Enum.UserInputType.MouseButton1 then
				Debounce = true
			end
		end)
	end)

	task.spawn(function()
		local BarPosition = Bar.Position

		local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
		local PositionTween = TweenService:Create(Bar, TweenInformation, {Position = UDim2.new(DefaultValue / MaximumValue - 0.05, 0, BarPosition.Y.Scale, BarPosition.Y.Offset)})

		PositionTween:Play()

		local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
		local SizeTween = TweenService:Create(Fill, TweenInformation, {Size = UDim2.new(DefaultValue / MaximumValue, 0, 1, 0)})

		SizeTween:Play()
	end)

	task.spawn(function()
		repeat
			task.wait()

			if Debounce == false then
				local MousePosition = UserInputService:GetMouseLocation().X
				local FramePosition = Slider.AbsolutePosition.X
				local FrameSize = Slider.AbsoluteSize.X
				local BarPosition = Bar.Position

				local Position = Snap((MousePosition - FramePosition) / FrameSize, 0.01)
				local Percentage = math.clamp(Position, 0, 1)

				local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
				local PositionTween = TweenService:Create(Bar, TweenInformation, {Position = UDim2.new(Percentage, 0, BarPosition.Y.Scale, BarPosition.Y.Offset)})

				PositionTween:Play()

				local TweenInformation = TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.In, 0, false, 0)
				local SizeTween = TweenService:Create(Fill, TweenInformation, {Size = UDim2.new(Percentage, 0, 1, 0)})

				SizeTween:Play()

				ValueDisplay.Text = math.round(Percentage * MaximumValue)

				CallBack(math.round(Percentage * MaximumValue))
			end
		until not Slider
	end)

	return Slider
end

local function CreateNotification(Duration, Message)
	local Notification = Instance.new("Frame")
	local UIStroke = Instance.new("UIStroke")
	local UIGradient = Instance.new("UIGradient")
	local UICorner = Instance.new("UICorner")
	local Text = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")

	Notification.Name = "Notification"
	Notification.Parent = NotificationContainer
	Notification.BackgroundColor3 = Color3.new(0, 0, 0)
	Notification.BackgroundTransparency = 0.150
	Notification.BorderColor3 = Color3.new(0, 0, 0)
	Notification.BorderSizePixel = 0
	Notification.Position = UDim2.new(0.226, 0, 0, 0)
	Notification.Size = UDim2.new(0, 0, 0, 0)

	UIStroke.Parent = Notification
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Thickness = 2
	UIStroke.Color = Color3.new(1, 1, 1)

	UIGradient.Color =  ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.new(1, 0.666667, 0)), ColorSequenceKeypoint.new(1.00, Color3.new(1, 0.803922, 0.411765))}
	UIGradient.Parent = UIStroke

	UICorner.Parent = Notification
	UICorner.CornerRadius = UDim.new(0, 6)

	Text.Name = "Text"
	Text.Parent = Notification
	Text.BackgroundColor3 = Color3.new(1, 1, 1)
	Text.BackgroundTransparency = 1.000
	Text.BorderColor3 = Color3.new(0, 0, 0)
	Text.BorderSizePixel = 0
	Text.Position = UDim2.new(-0.00264, 0, 0, 0)
	Text.Size = UDim2.new(1, 0, 1, 0)
	Text.Font = Enum.Font.GothamBold
	Text.Text = Message
	Text.TextColor3 = Color3.new(255, 255, 255)
	Text.TextScaled = true
	Text.TextSize = 13

	UITextSizeConstraint.Parent = Text
	UITextSizeConstraint.MaxTextSize = 13

	task.spawn(function()
		local NotificationSize = UDim2.new(1, 0, 0.087, 0)

		local TweenInformation = TweenInfo.new(0.15, Enum.EasingStyle.Linear, Enum.EasingDirection.Out, 0, false, 0)
		local SizeTween = TweenService:Create(Notification, TweenInformation, {Size = NotificationSize})

		SizeTween:Play()

		task.wait(Duration)

		NotificationSize = UDim2.new(0, 0, 0, 0)

		local SizeTween2 = TweenService:Create(Notification, TweenInformation, {Size = NotificationSize})

		SizeTween2:Play()

		task.spawn(function()
			task.wait(TweenInformation.Time)

			Notification:Destroy()
		end)
	end)
end

local function CreateFlyHud()
	local Background = Instance.new("Frame")
	local UIStroke = Instance.new("UIStroke")
	local UICorner = Instance.new("UICorner")
	local Text = Instance.new("TextLabel")
	local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
	local DisplayBackground = Instance.new("Frame")
	local UICorner_2 = Instance.new("UICorner")
	local Display = Instance.new("Frame")
	local UICorner_3 = Instance.new("UICorner")

	Background.Name = "Background"
	Background.Parent = GodSploit
	Background.BackgroundColor3 = Color3.new(0, 0, 0)
	Background.BackgroundTransparency = 0.250
	Background.BorderColor3 = Color3.new(0, 0, 0)
	Background.BorderSizePixel = 0
	Background.Position = UDim2.new(0.41, 0, 0.7, 0)
	Background.Size = UDim2.new(0.178, 0, 0.085, 0)

	UIStroke.Parent = Background
	UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
	UIStroke.Thickness = 2


	task.spawn(function()
		repeat
			task.wait(0.001)

			UIStroke.Color = Color3.fromRGB(0, 50, 255)
		until not game
	end)

	UICorner.Parent = Background

	Text.Name = "Text"
	Text.Parent = Background
	Text.BackgroundColor3 = Color3.new(255, 255, 255)
	Text.BackgroundTransparency = 1.000
	Text.BorderColor3 = Color3.new(0, 0, 0)
	Text.BorderSizePixel = 0
	Text.Position = UDim2.new(-0.00333, 0, 0.511, 0)
	Text.Size = UDim2.new(1, 0, 0.489, 0)
	Text.Font = Enum.Font.GothamBold
	Text.Text = "1"
	Text.TextColor3 = Color3.new(1, 0.666667, 0)
	Text.TextScaled = true
	Text.TextSize = 20
	Text.TextWrapped = true

	UITextSizeConstraint.Parent = Text
	UITextSizeConstraint.MaxTextSize = 20

	DisplayBackground.Name = "DisplayBackground"
	DisplayBackground.Parent = Background
	DisplayBackground.BackgroundColor3 = Color3.new(0, 0, 0)
	DisplayBackground.BorderColor3 = Color3.new(0, 0, 0)
	DisplayBackground.BorderSizePixel = 0
	DisplayBackground.Position = UDim2.new(0.229, 0, 0.267, 0)
	DisplayBackground.Size = UDim2.new(0.545, 0, 0.150, 0)

	UICorner_2.CornerRadius = UDim.new(0, 6)
	UICorner_2.Parent = DisplayBackground

	Display.Name = "Display"
	Display.Parent = DisplayBackground
	Display.BackgroundColor3 = Color3.new(1, 0.666667, 0)
	Display.BorderColor3 = Color3.new(0, 0, 0)
	Display.BorderSizePixel = 0
	Display.Position = UDim2.new(0, 0, 0, 0)
	Display.Size = UDim2.new(0, 0, 1, 0)
	Display.ZIndex = 2

	UICorner_3.CornerRadius = UDim.new(0, 6)
	UICorner_3.Parent = Display

	return Background, Text, Display
end

function CreateOutline(Player)
	if IsAlive(Player) then
		local BillBoard = Instance.new("BillboardGui")
		local Frame = Instance.new("Frame")
		local UIStroke = Instance.new("UIStroke")
		local UICorner = Instance.new("UICorner")

		BillBoard.Size = UDim2.new(4, 0, 4, 0)
		BillBoard.AlwaysOnTop = true
		BillBoard.Name = "Esp"	
		BillBoard.Parent = Player.Character.PrimaryPart

		Frame.Size = UDim2.new(1, 0, 1.5, 0)
		Frame.Position = UDim2.new(0, 0, -Player.Character.LowerTorso.Size.Y / 2 or -Player.PrimaryPart.Size.Y / 2, 0)
		Frame.BackgroundTransparency = 1	
		Frame.Parent = BillBoard

		UIStroke.Thickness = 1.5
		UIStroke.Color = Color3.new(1, 0.666667, 0)
		UIStroke.Transparency = 0
		UIStroke.Parent = Frame

		UICorner.Parent = Frame
		UICorner.CornerRadius = UDim.new(0, 3)
	end
end
